####################################################################
#                             Logging                              #
####################################################################

# hibernate.SQL: DEBUG=will show the SQL
logging.level.org.hibernate.SQL=DEBUG

# BasicBinder: TRACE will show values which have been bound
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Format SQL which is logged out
spring.jpa.properties.hibernate.format_sql=true

####################################################################
#  DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties) #
####################################################################
# N.B. With Spring Boot 2, HikariCP is the default DataSource and ConnectionPool.

# Whether to stop if an error occurs while initializing the database.
spring.datasource.continue-on-error=false
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=org.postgresql.Driver
# Whether to generate a random datasource name.
spring.datasource.generate-unique-name=false
# Name of the datasource. Default to "testdb" when using an embedded database.
#spring.datasource.name=
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# JDBC URL of the database. ${NAME:default_value} means use the environment variabe with the given NAME and
# if it is not present use our default value.
spring.datasource.url=jdbc:postgresql://${DB_HOSTNAME:localhost}:5432/${DB_NAME:ligerlearn_example}
# Login username of the database.
spring.datasource.username=postgres
# Login password of the database.
spring.datasource.password=password

####################################################################
#  Springdoc Openapi UI - Provides swagger UI                      #
####################################################################

# When the app is running access the page at http://localhost:8080/swagger-ui/index.html
# and input the site link: http://localhost:8080/api-docs/ to view our specific
# app's swagger-ui.
springdoc.api-docs.path=/api-docs

# Go to the page http://localhost:8080/swagger-ui.html to have our api-docs.path
# being shown as the UI.
springdoc.swagger-ui.path=/swagger-ui.html
